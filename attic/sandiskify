#!/usr/bin/env python3
from argparse import ArgumentParser
from mutagen.easyid3 import EasyID3
from pathlib import Path
import re
import shutil


def main():
    parser = ArgumentParser()
    parser.add_argument("-i", "--input", type=Path, default=".")
    parser.add_argument("-o", "--output", type=Path)
    parser.add_argument("-n", "--playlist-name", type=str)
    parser.add_argument("-a", "--artist", type=str)
    parser.add_argument("-A", "--album", type=str)
    args = parser.parse_args()

    if not args.output:
        inname = args.input.resolve().name
        if (m := re.match(r"^(.*) - (.*)$", inname)):
            if not args.artist:
                args.artist = m.group(1)
            if not args.album:
                args.album = m.group(2)
            args.output = Path(inname)
        else:
            args.output = Path("sandisk")
    if args.output.is_dir():
        shutil.rmtree(args.output)

    mp3s = [p for p in args.input.rglob("*.mp3")]
    if not mp3s:
        parser.error(f"No MP3 files in {args.input}")

    name_to_path = {p.name: p for p in mp3s}
    if len(name_to_path) != len(mp3s):
        dupes = [
            name
            for name in sorted(name_to_path)
            if sum(1 for p in mp3s if p.name == name) > 1
        ]
        parser.error(f"Duplicate file names! {dupes}")

    args.output.mkdir(parents=True, exist_ok=True)

    m3ufn = args.output / f"{args.playlist_name or args.output.name}.m3u"

    print(f"Writing {len(mp3s)} files to {m3ufn}")
    with open(m3ufn, "w", newline="\r\n") as m3u:
        m3u.write("#EXTM3U\n")
        for track, (name, path) in enumerate(sorted(name_to_path.items()), 1):
            if args.album or args.artist:
                id3 = EasyID3()
                if args.album:
                    id3["album"] = args.album
                if args.artist:
                    id3["artist"] = args.artist
                id3["title"] = path.stem
                id3["tracknumber"] = str(track)
                id3.save(path)

            path.link_to(args.output / name)
            m3u.write("#EXTINF:0,")
            m3u.write(name)
            m3u.write("\n")
            m3u.write(name)
            m3u.write("\n\n")


if __name__ == "__main__":
    main()
