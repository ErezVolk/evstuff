#!/bin/sh

# Update Git repo and pull if safe, without excessive traffic.

scratch=`mktemp`
trap "rm -f $scratch" EXIT

do_git()
{
	git "$@" > $scratch
	code=$?
	cat $scratch | sed -e "s/^/$PREFIX/"
	return $code
}

ROOT=`git rev-parse --show-toplevel` || exit  # Fails if not a Git repo
echo "… $ROOT"

NAME=`basename $ROOT`
PREFIX="[$NAME] "

do_git fetch --quiet --prune --all || exit   # Fails if no remote; this is the only server communication

REMOTE=`git rev-parse @{u}` || exit  # Fails if not a remote-tracking branch
LOCAL=`git rev-parse @`
BASE=`git merge-base $LOCAL $REMOTE`

STATUS=`git status --porcelain --untracked-files=no`
if [ -n "$STATUS" ]; then
    echo "! $ROOT"  # Local uncommitted changes
elif [ $LOCAL = $REMOTE ]; then
    echo "✔ $ROOT"  # Up to date
elif [ $LOCAL = $BASE ]; then
    echo "⇣ $ROOT"  # What we can here for
    do_git merge --ff-only $REMOTE
    echo "↳ $ROOT"
elif [ $REMOTE = $BASE ]; then
    echo "⇡ $ROOT"  # Need to push
else
    echo "⇅ $ROOT"  # Diverged
fi
